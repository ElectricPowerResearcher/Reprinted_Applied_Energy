%%%%机组组合%%%%;
%%%%线性化MILP模型%%%;
%%%考虑风电场景、不同电价场景、电动汽车充放电%%%
%%%电动汽车数量按照10倍压缩%%%%
clear
clc
%%%%%机组组合数据%%%%%%%%%%%;
Ji=10;%机组数量;
Time=24;%时间尺度;
SS=20;%场景数量;
Pmax=[455,455,130,130,162,80,85,55,55,55];%机组最大出力;
Pmin=[150,150,20,20,25,20,25,10,10,10];%机组最小出力;
a=[1000,970,700,680,450,370,480,660,665,670];
b=[16.19,17.26,16.60,16.50,19.7,22.26,27.74,25.92,27.27,27.79];
c=[0.00048,0.00031,0.002,0.0021,0.00398,0.00712,0.00079,0.00413,0.00222,0.00173];
Ton=[8,8,5,5,6,3,3,1,1,1];%最小开机时间;
Toff=[8,8,5,5,6,3,3,1,1,1];%最小停机时间;
Tcs=[5,5,4,4,4,2,2,0,0,0];%冷启动时间;
Sh=[4500,5000,550,560,900,170,260,30,30,30];%热启动费用;
Sc=[9000,10000,1100,1120,1800,340,520,60,60,60];%冷启动费用;
T=[8,8,-5,-5,-6,-3,-3,-1,-1,-1];%初始运行状态;
Xbefore=zeros(8,10);
for t=1:8
    for j=1:10
        if T(j)+t<=0
            Xbefore(t,j)=0;
        else
            Xbefore(t,j)=1;
        end
    end
end
Xf=Xbefore(1,:);%初始序列;
Xbefore=[zeros(1,10);Xbefore];
PL=[700,750,850,950,1000,1100,1150,1200,1300,1400,1450,1500,1400,1300,1200,1050,1000,1100,1200,1400,1300,1100,900,800];%日负荷;
delta_hot=[130,130,60,60,90,40,40,40,40,40];%爬坡速率
delta_cold=[150,150,20,20,25,20,25,10,10,10];%开停机爬坡速率
R=0.1*PL;%备用容量，这里取10%PL;
Pf=[89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84,89.84;99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76,99.76;100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100;86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52,86.52;93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54,93.54;85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14,85.14;76.14,76.14,76.14,76.14,76.14,68.36,68.36,68.36,61.72,61.72,61.72,61.72,61.72,61.72,58.32,58.32,58.32,58.76,58.76,58.76;57.72,57.72,57.72,57.72,57.72,42.48,42.48,42.48,47.28,47.28,47.28,47.28,47.28,47.28,58.32,58.32,58.32,58.76,58.76,58.76;81.90,81.90,81.90,81.90,81.90,70,70,70,86.12,86.12,86.12,86.12,86.12,86.12,91.40,91.40,91.40,60.54,60.54,60.54;63.22,63.22,63.22,63.22,63.22,81.30,81.30,81.30,78.42,78.42,78.42,78.42,78.42,78.42,76.20,76.20,76.20,51.74,51.74,51.74;74.98,74.98,74.98,74.98,74.98,63.56,63.56,63.56,93.56,93.56,93.56,93.56,93.56,93.56,69.34,69.34,69.34,88.90,88.90,88.90;80.06,80.06,80.06,80.06,80.06,55.02,55.02,55.02,89.74,89.74,89.74,89.74,89.74,89.74,79.48,79.48,79.48,62.40,62.40,62.40;57.90,57.90,57.90,64.48,61.86,75.34,75.34,75.34,81.84,81.84,71.22,109.720000000000,96.50,96.50,81.46,81.46,81.46,84.50,84.50,84.50;45.66,45.66,45.66,85.78,66.22,78.86,78.86,78.86,70.76,70.76,49.68,54.30,68.88,68.88,73.78,73.78,73.78,59.30,59.30,59.30;73.32,73.32,73.32,89.86,53.52,57.08,57.08,57.08,83.82,83.82,50.88,65.64,81.30,81.30,61.90,61.90,61.90,56.34,56.34,56.34;79.10,79.10,79.10,46.32,77.02,61.04,61.04,61.04,49.22,49.22,58.56,69.80,84.32,84.32,60.98,60.98,60.98,69.88,69.88,69.88;63.64,63.64,63.64,41.50,67.72,49.50,49.50,49.50,36.62,36.62,59.76,51.56,58.86,58.86,43.74,43.74,43.74,57.70,57.70,57.70;51.62,51.62,51.62,50.42,33.78,76.38,76.38,76.38,50.60,50.60,67.04,39.34,58.04,58.04,60.44,60.44,60.44,63.02,63.02,63.02;98.92,65.98,58.58,52.94,73.56,59.12,56.14,94.48,67.86,64.72,89.06,65.86,77.96,74.88,93.44,72.78,47.12,52.80,70.74,80.56;82.90,72.02,57.58,88.42,59.38,76.68,64.68,101.420000000000,60.20,53.92,96.60,54.26,64.20,70.52,63.42,33.20,65.30,65.60,61.06,71.52;99.84,68.12,68.76,70.88,73,80.14,72.74,78.74,90.36,62.74,58.80,59.54,95.86,46.72,35.60,90.38,91.26,86.48,89.82,52.66;46.92,26.48,67.36,40.68,63.70,62.16,76.44,54.74,52.88,69.28,76.50,53.16,65.40,50.12,49.80,65.06,48.98,41.44,56.74,92.88;52.76,75.90,56.26,71.08,84.14,85.46,31.26,79.92,81.54,63.42,62.26,79.56,41.46,48.52,53.58,68.30,67.66,44.14,44.42,61.16;73.16,48.68,99.48,83.76,82.04,41.10,96.54,75.04,108,72.12,40.76,99.24,81.14,73.92,93.56,66.40,63.88,79.52,51.18,68.66];%风电场景;
aa=[100,105,82,49,72,29,32,40,25,15];%污染物排放;
bb=[1.1285,1.1954,1.2130,1.2643,1.5354,1.8015,1.6966,1.8518,1.9101,2.2034];
cc=[0.00135,0.00127,0.00148,0.00289,0.00261,0.00212,0.00382,0.00393,0.00396,0.00510];
Ce=3000;%污染物成本;
Cw=100;%弃风成本;
w=[0.067,0.031,0.037,0.054,0.067,0.052,0.040,0.038,0.035,0.086,0.059,0.039,0.044,0.066,0.032,0.053,0.049,0.055,0.057,0.039];%场景概率;
Pd=1.8*10/1000;%放电功率;
Pc=1.8*10/1000;%充电功率;
Ndmax=15000*0.4*ones(24,20);%每时段最大接入放电电动汽车数量;150000辆电动车;
Ncmax=15000*0.95*ones(24,20);%每时段最大接入充电电动汽车数量;150000辆电动车;
%Ndmax=10000*0.4*ones(24,20);%每时段最大接入放电电动汽车数量;100000辆电动车;
%Ncmax=10000*0.95*ones(24,20);%每时段最大接入充电电动汽车数量;100000辆电动车;
%Ndmax=5000*0.4*ones(24,20);%每时段最大接入放电电动汽车数量;50000辆电动车;
%Ncmax=5000*0.95*ones(24,20);%每时段最大接入充电电动汽车数量;50000辆电动车;
%Ndmax=zeros(24,20);%输电网中不含电动汽车
%Ncmax=zeros(24,20);%输电网中不含电动汽车
Ndsummax=15000*3*ones(1,20);%全天电动汽车放电需求;150000辆电动车;
Ncsummax=15000*6*ones(1,20);%全天电动汽车充电需求;150000辆电动车;
%Ndsummax=10000*3*ones(1,20);%全天电动汽车放电需求;100000辆电动车;
%Ncsummax=10000*6*ones(1,20);%全天电动汽车充电需求;100000辆电动车;
%Ndsummax=5000*3*ones(1,20);%全天电动汽车放电需求;50000辆电动车;
%Ncsummax=5000*6*ones(1,20);%全天电动汽车充电需求;50000辆电动车;
%Ndsummax=zeros(1,20);%输电网中不含电动汽车
%Ncsummax=zeros(1,20);%输电网中不含电动汽车
priced=[0.06;0.06;0.07;0.08;0.09;0.1;0.12;0.15;0.2;0.25;0.3;0.35;0.25;0.2;0.15;0.1;0.09;0.1;0.15;0.25;0.2;0.1;0.08;0.07];%放电电价;放电电价高于充电电价的峰谷电价;
pricec=[0.06;0.06;0.07;0.08;0.09;0.1;0.11;0.12;0.14;0.16;0.17;0.18;0.16;0.14;0.12;0.095;0.09;0.1;0.12;0.16;0.14;0.1;0.08;0.07];%充电电价;放电电价高于充电电价的峰谷电价;
%priced=[0.06;0.06;0.07;0.08;0.09;0.1;0.11;0.12;0.14;0.16;0.17;0.18;0.16;0.14;0.12;0.095;0.09;0.1;0.12;0.16;0.14;0.1;0.08;0.07];%放电电价;峰谷电价;
%pricec=[0.06;0.06;0.07;0.08;0.09;0.1;0.11;0.12;0.14;0.16;0.17;0.18;0.16;0.14;0.12;0.095;0.09;0.1;0.12;0.16;0.14;0.1;0.08;0.07];%充电电价;峰谷电价;
%priced=0.08*ones(24,1);%放电电价:平电价;
%pricec=0.08*ones(24,1);%充电电价:平电价;
%%%%%MINLP转化为MILP求解%%%%%%%%%%%%%%%;
N=24;%线性化分段数;
X=binvar(Time,Ji);%0-1启停机变量;
S=sdpvar(Time,Ji);%机组启动费用;
PP=sdpvar(Time,Ji*N*SS);%线性化机组功率;
Pfx=sdpvar(Time,SS);%风机出力;
Nd=intvar(Time,SS);%电动汽车放电数量;
Nc=intvar(Time,SS);%电动汽车充电数量;
%%%%%%%%%%%目标函数%%%%%%%%%;
A=zeros(Time,Ji);
B=zeros(Time,Ji*N*SS);
for i=1:Time 
    for j=1:Ji 
        A(i,j)=a(j)+b(j)*Pmin(j)+c(j)*Pmin(j)^2;
    end
end;
for i=1:Time
    for j=1:Ji
        for k=1:N
            for l=1:SS
                B(i,Ji*N*(l-1)+N*(j-1)+k)=w(l)*(((b(j)*(k*(Pmax(j)-Pmin(j))/N+Pmin(j))+c(j)*(k*(Pmax(j)-Pmin(j))/N+Pmin(j))^2)-(b(j)*((k-1)*(Pmax(j)-Pmin(j))/N+Pmin(j))+c(j)*((k-1)*(Pmax(j)-Pmin(j))/N+Pmin(j))^2))/((Pmax(j)-Pmin(j))/N));
            end
        end
    end
end
f1=sum(sum(A.*X))+sum(sum(B.*PP));%燃料费用;
AA=zeros(Time,Ji);
BB=zeros(Time,Ji*N*SS);
for i=1:Time 
    for j=1:Ji 
        AA(i,j)=aa(j)+bb(j)*Pmin(j)+cc(j)*Pmin(j)^2;
    end
end;
for i=1:Time
    for j=1:Ji
        for k=1:N
            for l=1:SS
                BB(i,Ji*N*(l-1)+N*(j-1)+k)=w(l)*(((bb(j)*(k*(Pmax(j)-Pmin(j))/N+Pmin(j))+cc(j)*(k*(Pmax(j)-Pmin(j))/N+Pmin(j))^2)-(bb(j)*((k-1)*(Pmax(j)-Pmin(j))/N+Pmin(j))+cc(j)*((k-1)*(Pmax(j)-Pmin(j))/N+Pmin(j))^2))/((Pmax(j)-Pmin(j))/N));
            end
        end
    end
end
f2=20*5.1*(1-99/100)/10000*Ce*(sum(sum(AA.*X))+sum(sum(BB.*PP)));%污染物排放费用;
f3=Cw*sum(sum(Pf-Pfx).*w);%弃风惩罚成本;
f4=sum(sum(S));%机组启停机成本;
D=zeros(24,20);E=zeros(24,20);
for i=1:20
    D(:,i)=pricec;E(:,i)=priced;
end
f5=1000*sum(sum(Pc*Nc.*D-Pd*Nd.*E).*w);%车主的充电成本;
f=f1+f2+f3+f4+f5;
%%%%%约束条件%%%%%%%%%%%%%%%;
C=[S>=0,Pfx>=0,Nc>=0,Nd>=0];
%等式约束;
for i=1:Time
    for j=1:SS
        C=[C,(sum(PP(i,10*N*(j-1)+1:10*N*j))+sum(X(i,:).*Pmin)+Pfx(i,j)+Pd*Nd(i,j))==PL(i)+Pc*Nc(i,j)];
    end
end
%启动费用;
for i=2:Time
    for j=1:7
        C=[C,S(i,j)>=Sh(j)*(X(i,j)-X(i-1,j)),S(i,j)>=Sc(j)*(X(i,j)-sum(X(max(i-Toff(j)-Tcs(j)-1,1):i-1,j))-sum(Xbefore(1:min(9,max(1,Toff(j)+Tcs(j)+3-i)),j)))];
    end
    for j=8:10
        C=[C,S(i,j)>=Sc(j)*(X(i,j)-X(i-1,j))];
    end
end
for j=1:7
    C=[C,S(1,j)>=(X(1,j)-Xf(j))*Sh(j),S(1,j)>=Sc(j)*(X(1,j)-sum(Xbefore(1:min(9,Toff(j)+Tcs(j)+2),j)))];
end  
for j=8:10
    C=[C,S(1,j)>=(X(1,j)-Xf(j))*Sc(j)];
end  
%备用容量约束;
for i=1:Time
    for j=1:20
        C=[C,sum(X(i,:).*Pmax)+Pfx(i,j)+Pd*Nd(i,j)>=PL(i)+R(i)+Pc*Nc(i,j)];
    end
end
%最小出力约束;
C=[C,PP>=0];
%最大出力约束;
for i=1:Time
    for j=1:Ji
        for k=1:N
            for l=1:SS
                C=[C,PP(i,10*N*(l-1)+N*(j-1)+k)<=X(i,j)*(Pmax(j)-Pmin(j))/N];
            end
        end
    end
end
%最小开停机时间约束;
for i=2:Time
    for j=1:Ji
        C=[C,sum(X(i:min(24,i+Ton(j)-1),j))>=Ton(j)*(X(i,j)-X(i-1,j))];
    end
end
for j=1:Ji
    for i=2:(24-Toff(j)+1)
        C=[C,sum(1-X(i:i+Toff(j)-1,j))>=Toff(j)*(X(i-1,j)-X(i,j))];
    end
end
for j=1:7
    for i=24-Toff(j)+2:24
        C=[C,sum(1-X(i:24,j)-(X(i-1,j)-X(i,j)))>=0];
    end
end
for j=1:10
    C=[C,sum(X(1:Ton(j),j))>=Ton(j)*(X(1,j)-Xf(j))];
end
%爬坡约束
for i=2:Time
    for j=1:Ji
        for k=1:SS
            C=[C,(sum((PP(i,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)-PP(i-1,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)))+(X(i,j)-X(i-1,j))*Pmin(j))<=(delta_cold(j)*(X(i,j)-X(i-1,j))+Pmax(j)*X(i-1,j)),(sum((PP(i-1,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)-PP(i,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)))+(X(i-1,j)-X(i,j))*Pmin(j))<=(delta_cold(j)*(X(i-1,j)-X(i,j))+Pmax(j)*X(i,j)),(sum((PP(i-1,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)-PP(i,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)))+(X(i-1,j)-X(i,j))*Pmin(j))<=(delta_hot(j)*X(i-1,j)+Pmax(j)*(1-X(i-1,j))),(sum((PP(i,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)-PP(i-1,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)))+(X(i,j)-X(i-1,j))*Pmin(j))<=(delta_hot(j)*X(i,j)+Pmax(j)*(1-X(i,j)))];
        end
    end
end
for j=1:Ji
    if Xf(j)==0
        for k=1:20
            C=[C,PP(1,10*N*(k-1)+N*(j-1)+1:10*N*(k-1)+N*j)<=0];
        end
    end
end
%风机出力约束;
C=[C,Pfx<=Pf];
%可充放电的电动汽车数量限制
C=[C,Nd<=Ndmax,Nc<=Ncmax];
%充放电需求约束
C=[C,sum(Nc)==Ncsummax,sum(Nd)==Ndsummax];
%%%求解模型%%%
%ops=sdpsettings('solver','cplex');
%ops=sdpsettings('solver','bmibnb');
ops=sdpsettings('solver','gurobi');
result = solvesdp(C,f,ops);
%%%结果表示%%%
Price=[double(f1),double(f2),double(f3),double(f4),double(f5)];
Price_total=double(f)
PP=double(PP);
P=zeros(Time,Ji*SS);
for i=1:Time
    for j=1:Ji
        for k=1:SS
            for l=1:N
                P(i,10*(k-1)+j)=P(i,10*(k-1)+j)+PP(i,10*N*(k-1)+N*(j-1)+l);
            end
            P(i,10*(k-1)+j)=P(i,10*(k-1)+j)+X(i,j)*Pmin(j);
        end
    end
end
Pfx=double(Pfx);
X=double(X);
S=double(S);
Nc=10*double(Nc);
Nd=10*double(Nd);
